tags: []
title: "KubeVirt"
summary: "Deploy kubernetes clusters with k0rdent on KubeVirt."
logo: "https://kubevirt.io/user-guide/assets/KubeVirt_icon.png?width=600&height=315"
logo_big: ./assets/kubevirt-big_logo.svg # https://github.com/kubevirt/kubevirt.github.io/blob/main/assets/images/KubeVirt_logo_color.svg
type: infra
description: |
    KubeVirt is a managed Kubernetes service that simplifies the deployment and management of containerized applications as well as Virtual Machines in a common, shared environment. k0rdent can create and manage clusters with KubeVirt.
support_link: https://kubevirt.io/user-guide/#getting-help
prerequisites: |
    #### Install k0rdent/kcm into Kubernetes cluster
    ~~~bash
    helm install kcm oci://ghcr.io/k0rdent/kcm/charts/kcm --version 0.2.0 -n kcm-system --create-namespace \
      --set controller.enableTelemetry=false
    ~~~

install_code: |
    ##### Add KubeVirt provider
    ~~~bash
    cat << 'EOF' | jq -Rs '{data:{"kubevirt.yml":.}}' | kubectl patch configmap providers -n kcm-system --type=merge --patch-file /dev/stdin
    # SPDX-License-Identifier: Apache-2.0
    name: kubevirt
    clusterGVKs:
      - group: infrastructure.cluster.x-k8s.io
        version: v1alpha1
        kind: KubevirtCluster
    clusterIdentityKinds:
      - Secret
    EOF

    kubectl -n kcm-system rollout restart deployment/kcm-controller-manager
    ~~~

    ##### Create templates for KubeVirt provider charts
    ~~~bash
    kubectl apply -f - <<EOF
    apiVersion: source.toolkit.fluxcd.io/v1
    kind: HelmRepository
    metadata:
      name: oot-repo
      namespace: kcm-system
      labels:
        k0rdent.mirantis.com/managed: "true"
    spec:
      type: oci
      url: 'oci://ghcr.io/k0rdent/catalog/charts'
      interval: 10m0s
    ---
    apiVersion: k0rdent.mirantis.com/v1alpha1
    kind: ProviderTemplate
    metadata:
      name: cluster-api-provider-kubevirt-0-2-1
      annotations:
        helm.sh/resource-policy: keep
    spec:
      helm:
        chartSpec:
          chart: cluster-api-provider-kubevirt
          version: 0.2.1
          interval: 10m0s
          sourceRef:
            kind: HelmRepository
            name: oot-repo
    ---
    apiVersion: k0rdent.mirantis.com/v1alpha1
    kind: ClusterTemplate
    metadata:
      name: kubevirt-standalone-cp-0-2-0
      namespace: kcm-system
      annotations:
        helm.sh/resource-policy: keep
    spec:
      helm:
        chartSpec:
          chart: kubevirt-standalone-cp
          version: 0.2.0
          interval: 10m0s
          sourceRef:
            kind: HelmRepository
            name: oot-repo
    EOF
    ~~~

    ##### Add the KubeVirt chart into the Management object
    ~~~bash
    until kubectl patch management kcm --type=json -p='[
      {"op": "add", "path": "/spec/providers/-", "value": {"name": "cluster-api-provider-kubevirt", "template": "cluster-api-provider-kubevirt-0-2-1"}}
    ]'; do
      sleep 5
    done
    ~~~

    ##### Wait for objects readiness
    ~~~bash
    kubectl wait --for=condition=Ready=True management/kcm --timeout=300s
    kubectl wait -n kubevirt kv kubevirt --for=condition=Available --timeout=10m
    ~~~

    ##### [OPTIONAL] Install KubeVirt CLI
    ~~~bash
    KUBEVIRT_VERSION=$(kubectl get kubevirt.kubevirt.io/kubevirt -n kubevirt -o=jsonpath="{.status.observedKubeVirtVersion}")
    ARCH=$(uname -s | tr A-Z a-z)-$(uname -m | sed 's/x86_64/amd64/')
    sudo curl -L -o /usr/local/bin/virtctl https://github.com/kubevirt/kubevirt/releases/download/${KUBEVIRT_VERSION}/virtctl-${KUBEVIRT_VERSION}-${ARCH}
    sudo chmod +x /usr/local/bin/virtctl
    ~~~
verify_code: |
    ~~~bash
    kubectl get clustertemplate/kubevirt-standalone-cp-0-2-0 -n kcm-system
    # NAME                            VALID
    # kubevirt-standalone-cp-0-2-0    true

    kubectl get providertemplate/cluster-api-provider-kubevirt-0-2-1
    # NAME                                  VALID
    # cluster-api-provider-kubevirt-0-2-1   true

    kubectl get management/kcm
    # NAME   READY   RELEASE     AGE
    # kcm    True    kcm-0-2-0   4m4s
    ~~~
deploy_code: |
    ~~~bash
    kubectl apply -f - <<EOF
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: kubevirt-config
      namespace: kcm-system
      labels:
        k0rdent.mirantis.com/component: "kcm"
    ---
    apiVersion: k0rdent.mirantis.com/v1alpha1
    kind: Credential
    metadata:
      name: kubevirt-cluster-identity-cred
      namespace: kcm-system
    spec:
      description: KubeVirt credentials
      identityRef:
        apiVersion: v1
        kind: Secret
        name: kubevirt-config
        namespace: kcm-system
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: kubevirt-config-resource-template
      namespace: kcm-system
      labels:
        k0rdent.mirantis.com/component: "kcm"
      annotations:
        projectsveltos.io/template: "true"
    EOF

    kubectl apply -f - <<EOF
    ---
    apiVersion: k0rdent.mirantis.com/v1alpha1
    kind: ClusterDeployment
    metadata:
      name: kubevirt-demo
      namespace: kcm-system
    spec:
      template: kubevirt-standalone-cp-0-2-0
      credential: kubevirt-cluster-identity-cred
      config:
        controlPlaneNumber: 1
        workersNumber: 1
        controlPlane:
          preStartCommands:
            - passwd -u root
            - echo "root:root" | chpasswd
        worker:
          preStartCommands:
            - passwd -u root
            - echo "root:root" | chpasswd
    EOF
    ~~~
doc_link: https://kubevirt.io/user-guide/
versions: [v0.2.0]
